// <auto-generated />
using System;
using DungeonHeros.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DungeonHeros.Migrations
{
    [DbContext(typeof(DungeonHerosDbContext))]
    [Migration("20220511141006_monster")]
    partial class monster
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DungeonHeros.Models.Dungeon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dungeon");
                });

            modelBuilder.Entity("DungeonHeros.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Endurance")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Force")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Placeholder_hero.jpg");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Hero", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Classe = "Guerrier",
                            Endurance = 5,
                            Force = 2,
                            Image = ".../Images/nainVoleur.jpg",
                            Nom = "Torain",
                            Race = "Orc",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Classe = "Archer",
                            Endurance = 2,
                            Force = 5,
                            Image = ".../Images/orcGuerrier.jpg",
                            Nom = "Gurldac",
                            Race = "Elf",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Classe = "Voleur",
                            Endurance = 4,
                            Force = 3,
                            Image = ".../Images/elfeArcher.jpg",
                            Nom = "Oldin",
                            Race = "Humain",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Classe = "Guerrier",
                            Endurance = 6,
                            Force = 1,
                            Image = ".../Images/humainSorcier.jpg",
                            Nom = "Didier",
                            Race = "4",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Classe = "4",
                            Endurance = 2,
                            Force = 4,
                            Image = ".../Images/nainVoleur.jpg",
                            Nom = "Gibli",
                            Race = "Orc",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Classe = "Voleur",
                            Endurance = 1,
                            Force = 6,
                            Image = ".../Images/orcGuerrier.jpg",
                            Nom = "Gorduc",
                            Race = "Elf",
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Classe = "Archer",
                            Endurance = 3,
                            Force = 2,
                            Image = ".../Images/elfeArcher.jpg",
                            Nom = "aldin",
                            Race = "Humain",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("DungeonHeros.Models.Monstre", b =>
                {
                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Endurance")
                        .HasColumnType("int");

                    b.Property<int>("Force")
                        .HasColumnType("int");

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nom");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("DungeonHeros.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Teams", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Score = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Score = 15,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Score = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Score = 10,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Score = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Score = 20,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Score = 45,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Score = 25,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Score = 30,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DungeonHeros.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomHero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "admin",
                            NomHero = "admin",
                            Password = "admin"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "ghostkiller598r@gmail.com",
                            NomHero = "Ghostkiller",
                            Password = "qwerty"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "nathanlombardelli@hotmail.com",
                            NomHero = "Ghost",
                            Password = "qwerty"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1980, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "fabriceetverodehous@hotmail.com",
                            NomHero = "LOU",
                            Password = "FLloulou"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1982, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Mail = "dejardinveronique.b159@hotmail.com",
                            NomHero = "Icare",
                            Password = "dejdej"
                        });
                });

            modelBuilder.Entity("DungeonMonstre", b =>
                {
                    b.Property<int>("DungeonsId")
                        .HasColumnType("int");

                    b.Property<string>("MonstresNom")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DungeonsId", "MonstresNom");

                    b.HasIndex("MonstresNom");

                    b.ToTable("DungeonMonstre");
                });

            modelBuilder.Entity("HeroTeam", b =>
                {
                    b.Property<int>("HeroesId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("HeroesId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("HeroTeam");
                });

            modelBuilder.Entity("DungeonHeros.Models.Hero", b =>
                {
                    b.HasOne("DungeonHeros.Models.User", null)
                        .WithMany("Heros")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("DungeonHeros.Models.Team", b =>
                {
                    b.HasOne("DungeonHeros.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DungeonMonstre", b =>
                {
                    b.HasOne("DungeonHeros.Models.Dungeon", null)
                        .WithMany()
                        .HasForeignKey("DungeonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonHeros.Models.Monstre", null)
                        .WithMany()
                        .HasForeignKey("MonstresNom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeroTeam", b =>
                {
                    b.HasOne("DungeonHeros.Models.Hero", null)
                        .WithMany()
                        .HasForeignKey("HeroesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DungeonHeros.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DungeonHeros.Models.User", b =>
                {
                    b.Navigation("Heros");
                });
#pragma warning restore 612, 618
        }
    }
}
